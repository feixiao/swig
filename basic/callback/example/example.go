/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: example.i

package example

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_example_f0ef324ec2fa820a(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_example_f0ef324ec2fa820a(swig_intgo arg1);
extern uintptr_t _wrap__swig_NewDirectorCallbackCallback_example_f0ef324ec2fa820a(int);
extern void _wrap_DeleteDirectorCallback_example_f0ef324ec2fa820a(uintptr_t arg1);
extern void _wrap__swig_DirectorCallback_upcall_Run_example_f0ef324ec2fa820a(uintptr_t);
extern void _wrap_delete_Callback_example_f0ef324ec2fa820a(uintptr_t arg1);
extern void _wrap_Callback_run_example_f0ef324ec2fa820a(uintptr_t arg1);
extern uintptr_t _wrap_new_Callback_example_f0ef324ec2fa820a(void);
extern uintptr_t _wrap_new_Caller_example_f0ef324ec2fa820a(void);
extern void _wrap_delete_Caller_example_f0ef324ec2fa820a(uintptr_t arg1);
extern void _wrap_Caller_delCallback_example_f0ef324ec2fa820a(uintptr_t arg1);
extern void _wrap_Caller_setCallback_example_f0ef324ec2fa820a(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Caller_call_example_f0ef324ec2fa820a(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_example_f0ef324ec2fa820a(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type _swig_DirectorCallback struct {
	SwigcptrCallback
	v interface{}
}

func (p *_swig_DirectorCallback) Swigcptr() uintptr {
	return p.SwigcptrCallback.Swigcptr()
}

func (p *_swig_DirectorCallback) SwigIsCallback() {
}

func (p *_swig_DirectorCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorCallback(v interface{}) Callback {
	p := &_swig_DirectorCallback{0, v}
	p.SwigcptrCallback = SwigcptrCallback(C._wrap__swig_NewDirectorCallbackCallback_example_f0ef324ec2fa820a(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorCallback(arg1 Callback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorCallback_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Callback_example_f0ef324ec2fa820a
func Swiggo_DeleteDirector_Callback_example_f0ef324ec2fa820a(c int) {
	swigDirectorLookup(c).(*_swig_DirectorCallback).SwigcptrCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceCallbackRun interface {
	Run()
}

func (swig_p *_swig_DirectorCallback) Run() {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCallbackRun); swig_ok {
		swig_g.Run()
		return
	}
	C._wrap__swig_DirectorCallback_upcall_Run_example_f0ef324ec2fa820a(C.uintptr_t(swig_p.SwigcptrCallback))
}

func DirectorCallbackRun(p Callback) {
	C._wrap__swig_DirectorCallback_upcall_Run_example_f0ef324ec2fa820a(C.uintptr_t(p.(*_swig_DirectorCallback).SwigcptrCallback))
}

//export Swig_DirectorCallback_callback_run_example_f0ef324ec2fa820a
func Swig_DirectorCallback_callback_run_example_f0ef324ec2fa820a(swig_c int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCallback)
	swig_p.Run()
}

type SwigcptrCallback uintptr

func (p SwigcptrCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCallback) SwigIsCallback() {
}

func (p SwigcptrCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteCallback(arg1 Callback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Callback_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCallback) Run() {
	_swig_i_0 := arg1
	C._wrap_Callback_run_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

func NewCallback() (_swig_ret Callback) {
	var swig_r Callback
	swig_r = (Callback)(SwigcptrCallback(C._wrap_new_Callback_example_f0ef324ec2fa820a()))
	return swig_r
}

type Callback interface {
	Swigcptr() uintptr
	SwigIsCallback()
	DirectorInterface() interface{}
	Run()
}

type SwigcptrCaller uintptr

func (p SwigcptrCaller) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCaller) SwigIsCaller() {
}

func NewCaller() (_swig_ret Caller) {
	var swig_r Caller
	swig_r = (Caller)(SwigcptrCaller(C._wrap_new_Caller_example_f0ef324ec2fa820a()))
	return swig_r
}

func DeleteCaller(arg1 Caller) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Caller_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCaller) DelCallback() {
	_swig_i_0 := arg1
	C._wrap_Caller_delCallback_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCaller) SetCallback(arg2 Callback) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Caller_setCallback_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrCaller) Call() {
	_swig_i_0 := arg1
	C._wrap_Caller_call_example_f0ef324ec2fa820a(C.uintptr_t(_swig_i_0))
}

type Caller interface {
	Swigcptr() uintptr
	SwigIsCaller()
	DelCallback()
	SetCallback(arg2 Callback)
	Call()
}


type SwigcptrSwigDirector_Callback uintptr
type SwigDirector_Callback interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Callback) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


