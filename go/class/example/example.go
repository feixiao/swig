/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: example.i

package example

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_example_ce26c1f9f9997e3a(swig_intgo arg1);
extern void _wrap_delete_Shape_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_Shape_x_set_example_ce26c1f9f9997e3a(uintptr_t arg1, double arg2);
extern double _wrap_Shape_x_get_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_Shape_y_set_example_ce26c1f9f9997e3a(uintptr_t arg1, double arg2);
extern double _wrap_Shape_y_get_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_Shape_move_example_ce26c1f9f9997e3a(uintptr_t arg1, double arg2, double arg3);
extern double _wrap_Shape_area_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern double _wrap_Shape_perimeter_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_Shape_nshapes_set_example_ce26c1f9f9997e3a(swig_intgo arg1);
extern swig_intgo _wrap_Shape_nshapes_get_example_ce26c1f9f9997e3a(void);
extern uintptr_t _wrap_new_Circle_example_ce26c1f9f9997e3a(double arg1);
extern double _wrap_Circle_area_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern double _wrap_Circle_perimeter_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_delete_Circle_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_SetCircle_X_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1);
extern double _wrap_GetCircle_X_example_ce26c1f9f9997e3a(uintptr_t _swig_base);
extern void _wrap_SetCircle_Y_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1);
extern double _wrap_GetCircle_Y_example_ce26c1f9f9997e3a(uintptr_t _swig_base);
extern void _wrap_Circle_move_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1, double arg2);
extern uintptr_t _wrap_new_Square_example_ce26c1f9f9997e3a(double arg1);
extern double _wrap_Square_area_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern double _wrap_Square_perimeter_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_delete_Square_example_ce26c1f9f9997e3a(uintptr_t arg1);
extern void _wrap_SetSquare_X_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1);
extern double _wrap_GetSquare_X_example_ce26c1f9f9997e3a(uintptr_t _swig_base);
extern void _wrap_SetSquare_Y_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1);
extern double _wrap_GetSquare_Y_example_ce26c1f9f9997e3a(uintptr_t _swig_base);
extern void _wrap_Square_move_example_ce26c1f9f9997e3a(uintptr_t _swig_base, double arg1, double arg2);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_example_ce26c1f9f9997e3a(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrShape uintptr

func (p SwigcptrShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrShape) SwigIsShape() {
}

func DeleteShape(arg1 Shape) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Shape_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrShape) SetX(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Shape_x_set_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrShape) GetX() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Shape_x_get_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrShape) SetY(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Shape_y_set_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrShape) GetY() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Shape_y_get_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrShape) Move(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Shape_move_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrShape) Area() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Shape_area_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrShape) Perimeter() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Shape_perimeter_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SetShapeNshapes(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_Shape_nshapes_set_example_ce26c1f9f9997e3a(C.swig_intgo(_swig_i_0))
}

func GetShapeNshapes() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_Shape_nshapes_get_example_ce26c1f9f9997e3a())
	return swig_r
}

type Shape interface {
	Swigcptr() uintptr
	SwigIsShape()
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
	Move(arg2 float64, arg3 float64)
	Area() (_swig_ret float64)
	Perimeter() (_swig_ret float64)
}

type SwigcptrCircle uintptr

func (p SwigcptrCircle) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCircle) SwigIsCircle() {
}

func NewCircle(arg1 float64) (_swig_ret Circle) {
	var swig_r Circle
	_swig_i_0 := arg1
	swig_r = (Circle)(SwigcptrCircle(C._wrap_new_Circle_example_ce26c1f9f9997e3a(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrCircle) Area() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Circle_area_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCircle) Perimeter() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Circle_perimeter_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteCircle(arg1 Circle) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Circle_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrCircle) SetX(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetCircle_X_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrCircle) GetX() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetCircle_X_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrCircle) SetY(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetCircle_Y_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrCircle) GetY() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetCircle_Y_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrCircle) Move(arg1 float64, arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Circle_move_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0), C.double(_swig_i_1))
}

func (p SwigcptrCircle) SwigIsShape() {
}

func (p SwigcptrCircle) SwigGetShape() Shape {
	return SwigcptrShape(p.Swigcptr())
}

type Circle interface {
	Swigcptr() uintptr
	SwigIsCircle()
	Area() (_swig_ret float64)
	Perimeter() (_swig_ret float64)
	SetX(arg1 float64)
	GetX() (_swig_ret float64)
	SetY(arg1 float64)
	GetY() (_swig_ret float64)
	Move(arg1 float64, arg2 float64)
	SwigIsShape()
	SwigGetShape() Shape
}

type SwigcptrSquare uintptr

func (p SwigcptrSquare) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSquare) SwigIsSquare() {
}

func NewSquare(arg1 float64) (_swig_ret Square) {
	var swig_r Square
	_swig_i_0 := arg1
	swig_r = (Square)(SwigcptrSquare(C._wrap_new_Square_example_ce26c1f9f9997e3a(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSquare) Area() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Square_area_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSquare) Perimeter() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Square_perimeter_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSquare(arg1 Square) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Square_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSquare) SetX(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetSquare_X_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrSquare) GetX() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetSquare_X_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSquare) SetY(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetSquare_Y_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrSquare) GetY() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetSquare_Y_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSquare) Move(arg1 float64, arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Square_move_example_ce26c1f9f9997e3a(C.uintptr_t(_swig_base), C.double(_swig_i_0), C.double(_swig_i_1))
}

func (p SwigcptrSquare) SwigIsShape() {
}

func (p SwigcptrSquare) SwigGetShape() Shape {
	return SwigcptrShape(p.Swigcptr())
}

type Square interface {
	Swigcptr() uintptr
	SwigIsSquare()
	Area() (_swig_ret float64)
	Perimeter() (_swig_ret float64)
	SetX(arg1 float64)
	GetX() (_swig_ret float64)
	SetY(arg1 float64)
	GetY() (_swig_ret float64)
	Move(arg1 float64, arg2 float64)
	SwigIsShape()
	SwigGetShape() Shape
}


